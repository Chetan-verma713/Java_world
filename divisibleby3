package Node.Stack;

public class queuedivisibleby3<t>
{
    Node head;

    public int push(t new_data)
    {
        Node new_node = new Node(new_data);
        if (head == null)
        {
            head = new_node;
        }
        else
        {
            Node temp = head;
            while(temp.getNext() != null)
            {
                temp = temp.getNext();
            }
            temp.setNext(new_node);
        }

        return (int) head.getData();
    }
    public int length()
    {
        int i = 1;
        Node temp = head;
        while (temp.getNext() != null)
        {
            i++;
            temp = temp.getNext();
        }
        return i;
    }
    public void show()
    {
        Node temp = head;
        System.out.println(length() + "  nodes here");
        System.out.println();
        System.out.println();
        
        for (int i = 1; i <= length(); i++)
        {
            if (i%3 == 0)
            {
                System.out.println("Node deleted...");
            }
            else
            {
                System.out.println(temp.getData());
            }
            temp = temp.getNext();
        }
    }


}
